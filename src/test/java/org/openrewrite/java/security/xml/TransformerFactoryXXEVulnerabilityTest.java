/*
 * Copyright 2022 the original author or authors.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * https://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openrewrite.java.security.xml;

import org.junit.jupiter.api.Test;
import org.openrewrite.java.security.XmlParserXXEVulnerability;
import org.openrewrite.test.RecipeSpec;
import org.openrewrite.test.RewriteTest;

import static org.openrewrite.java.Assertions.java;

class TransformerFactoryXXEVulnerabilityTest implements RewriteTest {
    @Override
    public void defaults(RecipeSpec spec) {
        spec.recipe(new XmlParserXXEVulnerability());
    }

    @Test
    void factoryIsNotVulnerable() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsNotVulnerableClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  public void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsNotVulnerableLiteral() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsAll() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtd() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsStylesheet() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtdAndStylesheet() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtdAndFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsStylesheetAndFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableNeedsDtdAndStylesheetWithLiteralFeature() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", true);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factorySecureProcessingFalseUnchanged() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, false);
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryDtdValueNotEmptyUnchanged() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "123");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryStylesheetValueNotEmptyUnchanged() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "abc");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryDtdNonemptyButStylesheetEmptyUnchanged() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "123");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryDtdEmptyButStylesheetNonemptyUnchanged() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  public void XMLTransformer(Source source) {
                      TransformerFactory tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "abc");
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryConstructorInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              
              public class MyTransformerFactory {
                  private TransformerFactory tf;
                  public MyTransformerFactory() {
                      tf = TransformerFactory.newInstance();
                  }
              }
              """,
            """
              import javax.xml.XMLConstants;
              import javax.xml.transform.TransformerFactory;
              
              public class MyTransformerFactory {
                  private TransformerFactory tf;
                  public MyTransformerFactory() {
                      tf = TransformerFactory.newInstance();
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableWithClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  public void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  
                  {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  public void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryNeedsStylesheetWithClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  public void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """,
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  {
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
                      tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                  }
                  public void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryClassBlockInitializationUnchanged() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.transform.TransformerFactory;
              import javax.xml.transform.Transformer;
              import javax.xml.XMLConstants;
              import javax.xml.transform.Source;
              
              public class MyTransformerFactory {
                  TransformerFactory tf = TransformerFactory.newInstance();
                  {
                      tf.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", false);
                      tf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
                  }
                  public void XMLTransformer(Source source) {
                      Transformer transformer = tf.newTransformer(source);
                  }
              }
              """
          )
        );
    }
}
